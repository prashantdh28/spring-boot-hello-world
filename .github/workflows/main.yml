name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.29.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Docker Image Build and upload to ECR
      run: |
        echo "Building Docker Image"
        docker build -t spring-boot-hello-world .
          
        echo "Succesfully built image ---- Pushing to ECR"
        docker tag spring-boot-hello-world:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/spring-boot-hello-world:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/spring-boot-hello-world:latest

    - name: Deployment to EKS
      run: |
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name demo
        kubectl rollout restart deploy spring-boot-hello-world -n prod
